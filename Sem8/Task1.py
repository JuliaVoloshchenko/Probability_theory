"""
Даны значения величины заработной платы заемщиков банка (zp) и значения их
поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с
помощью функции cov из numpy
Полученные значения должны быть равны.
Найдите коэффициент корреляции Пирсона с помощью ковариации и
среднеквадратичных отклонений двух признаков,
а затем с использованием функций из библиотек numpy и pandas.
"""
import matplotlib.pyplot as plt
import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

cov1 = np.mean(zp * ks) - np.mean(zp) * np.mean(ks)
print(f'ковариация расчитанная вручную = {cov1}')
cov2 = np.cov(zp, ks, ddof=0)
print(f'смещенная ковариация с помощью функции = {cov2[0,1]}')
r = cov1 / (np.std(zp, ddof=0) * np.std(ks, ddof=0))
print(f'коэфициент Пирсона вручную = {r}')
R = np.corrcoef(zp, ks)
print(f'коэфициент Пирсона с помощью функции = {R[0,1]}')
plt.scatter(zp, ks)
plt.title({round(cov2[0,1], 2)})
plt.xlabel('zp')
plt.ylabel('ks')
plt.show()